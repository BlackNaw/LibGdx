package com.ivan.acciones;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Batch;
import com.badlogic.gdx.scenes.scene2d.Actor;
import com.badlogic.gdx.scenes.scene2d.actions.MoveToAction;
import com.badlogic.gdx.scenes.scene2d.actions.ParallelAction;
import com.badlogic.gdx.scenes.scene2d.actions.RepeatAction;
import com.badlogic.gdx.scenes.scene2d.actions.RotateToAction;
import com.badlogic.gdx.scenes.scene2d.actions.SequenceAction;

public class MyActorTres extends Actor {
	Texture texture = new Texture(Gdx.files.internal("halcon.png"));
	RotateToAction rotar = new RotateToAction();
	MoveToAction mover=new MoveToAction();

	public MyActorTres() {
		// darle las dimensiones
		setBounds(0,0, texture.getWidth(), texture.getHeight());

		rotar.setRotation(360f);
		rotar.setDuration(20f);
		mover.setPosition(100f, 300f);
		mover.setDuration(5f);
		//Secuencia
		SequenceAction secuencia=new SequenceAction(rotar,mover);
		ParallelAction paralelo=new ParallelAction(rotar,mover);
		RepeatAction repetir=new RepeatAction();
		repetir.setAction(paralelo);
		repetir.setCount(RepeatAction.FOREVER);
		
		this.addAction(repetir);
	}

	// Aqui nos encargamos de dibujar
	@Override
	public void draw(Batch batch, float parentAlpha) {
		super.draw(batch, parentAlpha);
		// batch.draw(texture,this.getX(),this.getY());
		batch.draw(texture, /*this.getX(), this.getY()*/120,120, this.getOriginX(), this.getOriginY(), this.getWidth(),
				this.getHeight(), this.getScaleX(), this.getScaleY(), this.getRotation(), 0, 0,
				texture.getWidth(), texture.getHeight(), false, false);
	}

	// Aqui nos encargamos del comportamiento
	@Override
	public void act(float delta) {
		super.act(delta);
	}
}
