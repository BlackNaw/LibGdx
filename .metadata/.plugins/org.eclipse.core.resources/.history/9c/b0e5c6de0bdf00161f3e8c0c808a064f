package com.black.asteroid;

import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;

import comun.Posicion;
import comun.Rectangulo;
import comun.Sondeo;
import elementos.Actor;
import elementos.Asteroides;

public class MyGdxGame extends ApplicationAdapter {
	SpriteBatch batch;
	Actor nave;
	Asteroides asteroide;
	Rectangulo pantalla;
	Texture fondo;

	@Override
	public void create() {
		batch = new SpriteBatch();
		nave = new Actor(new Posicion(0, 0), new Texture(Gdx.files.internal("nave.png")));
		asteroide = new Asteroides(new Texture(Gdx.files.internal("asteroide.png")));
		pantalla = new Rectangulo(new Posicion(0, 0), Gdx.graphics.getWidth(), Gdx.graphics.getWidth());
	}

	public void render() {
		Gdx.gl.glClearColor(0, 0, 0, 0);
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		// Inputs
		// Sonde obtiene la direccion pulsado, estabelce direccion valida la
		// direccion obtenido
		nave.actual = nave.actual.validar(Sondeo.detectar(nave.actual));
		// Logica
		if (nave.isViva(pantalla)) {
			if (nave.actualizar(asteroide.cuerpo))
				asteroide.cambiar();
		}
		// Dibujo
		batch.begin();
//		batch.draw(fondo, 0, 0,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());
		nave.pinta(batch);
		asteroide.pinta(batch);
		batch.end();
	}

	@Override
	public void dispose() {
		batch.dispose();
		nave.dispose();
		fondo.dispose();
		asteroide.dispose();
	}
}
