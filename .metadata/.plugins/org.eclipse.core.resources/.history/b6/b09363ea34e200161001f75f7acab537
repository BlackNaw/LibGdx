package elementos;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;

import comun.Avance;
import comun.Direccion;
import comun.Posicion;
import comun.Rectangulo;
import interfaces.Actualizable;
import interfaces.Colisionable;
import interfaces.Moveable;
import interfaces.Pintable;
import interfaces.Reiniciable;

public class Actor extends Elemento implements Moveable, Actualizable, Pintable, Colisionable, Reiniciable {

	public Direccion direccionActual = Direccion.este;
	Avance avance;
	public boolean alive=true;

	public Actor(Posicion posicion, Texture imagen) {
		super(posicion, imagen);
		avance = new Avance(direccionActual);
//		Gdx.app.log("Ancho:", String.valueOf(imagen.getWidth()));
//		Gdx.app.log("Alto:", String.valueOf(imagen.getHeight()));
	}
	
	public boolean enLimitesPantalla(Rectangulo mayor){
		return cuerpo.contiene(mayor);
	}

	@Override
	public boolean actualizar(Rectangulo cuerpo) {
		mover();
		return comprobarColision(cuerpo);
	}

	@Override
	public void mover() {
		avance.direccionar(direccionActual);
		posicion.x += avance.x;
		posicion.y += avance.y;
	}

	@Override
	public void pintar(SpriteBatch batch) {
		batch.draw(imagen, posicion.x, posicion.y);

	}

	@Override
	public boolean comprobarColision(Rectangulo cuerpo) {
		return this.cuerpo.solapa(cuerpo);
	}

	@Override
	public void reiniciar() {
		posicion.x=Gdx.graphics.getWidth()/3;
		posicion.y=0;
		
	}
	
}
